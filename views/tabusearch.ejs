<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="de" ng-app="integratedTabuSearchApp">
    <head>
        <meta charset="utf-8">
        <title>ITS - Algorithm</title>
        <link rel="shortcut icon" href="/images/or-favicon.png"/>

        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script src="/javascripts/jquery-3.2.1.min.js" type="text/javascript"></script>
        <script src="/javascripts/notify.min.js" type="text/javascript"></script>
        <script src="/javascripts/angular.min-1.5.6.js" type="text/javascript"></script>
        <script src="/javascripts/controllers/integratedTabuSearchController.js" type="text/javascript"></script>
        <script src="/javascripts/jquery-ui.min.js" type="text/javascript"></script>
        <script src="/javascripts/tether.min.js" type="text/javascript"></script>
        <script src="/javascripts/bootstrap.min.js" type="text/javascript"></script>
        <script src="/javascripts/its-utility.js" type="text/javascript"></script>
        <script src="/javascripts/responsive.min.js" type="text/javascript"></script>

        <link href="/stylesheets/tether.min.css" rel="stylesheet" type="text/css">
        <link href="/stylesheets/pigendo-bootstrap-default.css" rel="stylesheet" type="text/css">
        <link href="/stylesheets/jquery-ui.min.css" rel="stylesheet" type="text/css"/>
        <link href="/stylesheets/responsive.min.css" rel="stylesheet" type="text/css"/>
        <link href="/stylesheets/style.css" rel="stylesheet" type="text/css">

        <style>
            #sortable { list-style-type: none; margin: 0; padding: 0; width: 60%; }
            #sortable li { margin: 0 3px 3px 3px; padding: 0.4em; padding-left: 1.5em; font-size: 1.4em; height: 18px; }
            #sortable li span { position: absolute; margin-left: -1.3em; }

            .hidden {
                visibility: hidden;
            }
        </style>

        <script>
            $(document).ready(function() {
                if(typeof $.urlParam('id') !== "string") {
                    // Creation of the tabu search
                    $("#sortable").sortable({
                        cursor: "move",
                        forcerHelpSize: true
                    });
                    $("#sortable").disableSelection();
                    $("#selectedParameters").tablelist();
                } else {
                    // Performing of the tabu search
                    $("#selectedParametersTabuSearch").tablelist();
                }


                $("#tabuSearchInfoAccordion").accordion({
                    heightStyle: "content",
                    collapsible: true,
                    active: false
                });
            });

            function arrayContainsString(string, array) {
                for(var i in array) {
                    if(array[i] === string) {
                        return true;
                    }
                }

                return false;
            }

            var callingCounter = 0;
            var amountOfParameters = -1;
            function finishPost(payload) {
                callingCounter++;

                if(callingCounter == amountOfParameters) {
                    // All parameters were checked
                    callingCounter = 0;
                    amountOfParameters = -1;

                    setTimeout(function() {
                        // Remove the standard parameters for which the user has entered a new custom value
                        var parameterIdsToIgnore = [];
                        for(var x in payload.parameters) {
                            var param = payload.parameters[x];

                            if(! param.standard) {
                                // Find index of the same standard param
                                var indexToDelte = -1;
                                for(var i in payload.parameters) {
                                    var sParam = payload.parameters[i];

                                    if(sParam.standard && sParam.ident === param.ident) {
                                        parameterIdsToIgnore.push(sParam._id);
                                        break;
                                    }
                                }
                            }
                        }

                        var newParamIdList = [];
                        for(var i in payload.parameters) {
                            var param = payload.parameters[i];

                            if(! arrayContainsString(param._id, parameterIdsToIgnore)) {
                                if(! arrayContainsString(param._id, newParamIdList)) {
                                    newParamIdList.push(param._id);
                                }
                            }
                        }
                        payload.parameterIds = [];
                        payload.parameterIds = newParamIdList;

                        $.post("/tabusearch", payload, function(data) {
                            console.log("Created TabuSearchSet " , data);

                            var url = "/tabusearch#?id=" + data._id;
                            $(location).attr("href", url);
                            window.setTimeout('location.reload()', 500);
                        }, "json");
                    }, 1000);
                }
            }

            function postTabuSearch() {
                var payload = {
                    dataSetId: $("#dropwdownDatasetSelection").find(":selected").get(0).value,
                    parameterIds: [],
                    parameters: [],
                    optimizationObjectiveOrder: $("#sortable").sortable("toArray")
                };

                $.get("/standardparameters", function(standardparameters) {
                    // Count parameters
                    $(".parameter").each(function() {
                        var sParam = getStandardParameterWithIdent(standardparameters, $(this).get(0).id);
                        amountOfParameters = standardparameters.length;

                        if(sParam.value != $(this).get(0).value) {
                            amountOfParameters++;
                        };
                    });

                    $(".parameter").each(function() {
                        var sParam = getStandardParameterWithIdent(standardparameters, $(this).get(0).id);

                        if(sParam.value != $(this).get(0).value) {
                            var newParameter = {
                                ident: sParam.ident,
                                name: sParam.name,
                                description: sParam.description,
                                type: sParam.type,
                                value: $(this).get(0).value
                            };

                            $.post("/parameter", newParameter, function(data) {
                                payload.parameterIds.push(data._id);
                                payload.parameters.push(data);
                                finishPost(payload);
                            }, "json");
                        } else {
                            payload.parameterIds.push(sParam._id);
                            payload.parameters.push(sParam);
                            finishPost(payload);
                        }
                    });
                });
            }

            function getStandardParameterWithIdent(parameters, ident) {
                for(var i in parameters) {
                    var sParameter = parameters[i];

                    if(sParameter.ident == ident) {
                        return sParameter;
                    }
                }

                return null;
            }

            $.urlParam = function(name){
                var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
                if (results==null){
                    return null;
                }
                else{
                    return decodeURI(results[1]) || 0;
                }
            }

            function toggleHiddenClass(id) {
                $("#" + id).toggleClass("hidden");
            }
        </script>
    </head>

    <body ng-controller="integratedTabuSearchController">
        <div class="topnav" id="customNavbar">
            <a href="/">Home</a>
            <a href="/dataupload">Datenupload</a>
            <a href="javascript:window.location = '/tabusearch'">ITS</a>
            <a href="/overviewdata">Datenüberblick</a>
            <a href="javascript:void(0);" class="icon" onclick="toggleNavbarClass('customNavbar')">&#9776;</a>
        </div>

        <div class="container">
            <h1>Iterated Tabu Search</h1>

            <!-- Site shown when tabu search is performed -->
            <div ng-show="performTabuSearch">
                <div id="tabuSearchInfoAccordion">
                    <h2>1. Ausgewählten Optimization Objectives</h2>
                    <div>
                        <ol>
                            <li ng-repeat="optName in optObjectivesNames">{{optName}}</li>
                        </ol>
                    </div>

                    <h2>2. Ausgewählten Parameter</h2>
                    <div>
                        <!--<input type="button" onclick="toggleHiddenClass('selectedParameters')" value="toggle">-->
                        <table id="selectedParametersTabuSearch" data-table-list class="table-striped table-bordered">
                            <thead>
                            <tr>
                                <th scope="col">Name</th>
                                <th>Wert</th>
                                <th>Beschreibung</th>
                            </tr>
                            </thead>
                            <tr ng-repeat="param in standardParameters">
                                <td scope="row">{{param.name}}</td>
                                <td><input class="parameter" id="{{param.ident}}" type="number" disabled value="{{param.value}}"></td>
                                <td>{{param.description}}</td>
                            </tr>
                        </table>
                    </div>

                    <h2>3. Ausgewählter Datensatz</h2>
                    <div>
                        <a href="/viewdataset#?id={{dataset._id}}" target="_blank">Link zum Ausgewählter Datensatz</a>
                    </div>
                </div>
            </div>

            <!-- ################################# -->
            <!-- Site shown when run is configured -->
            <!-- ################################# -->
            <div ng-show="!performTabuSearch">
                <h2>Introduction TODO</h2>

                <h2>1. Wahl der Optimization Objectives</h2>
                <ul id="sortable" style="width: 100%;">
                    <li class="ui-state-default optObjOrder" id="paint_color_batches">
                        <span class="ui-icon ui-icon-arrowthick-2-n-s optObjOrderIcon"></span>
                        <p class="optObjOrderText">Paint color batches</p>
                    </li>

                    <li class="ui-state-default optObjOrder" id="high_priority" >
                        <span class="ui-icon ui-icon-arrowthick-2-n-s optObjOrderIcon"></span>
                        <p class="optObjOrderText">High priority ratio constraints</p>
                        <span class="ui-icon ui-icon-minusthick optObjOrderIcon optObjOrderIconDelte" onclick="removeOptObj('high_priority')"></span>
                    </li>

                    <li class="ui-state-default optObjOrder" id="low_priority">
                        <span class="ui-icon ui-icon-arrowthick-2-n-s optObjOrderIcon"></span>
                        <p class="optObjOrderText">Low priority ratio constraints</p>
                        <span class="ui-icon ui-icon-minusthick optObjOrderIcon optObjOrderIconDelte" onclick="removeOptObj('low_priority')"></span>
                    </li>
                </ul>

                <h2>2. Wahl der Parameter</h2>
                <table id="selectedParameters" data-table-list class="table-striped table-bordered">
                    <thead>
                        <tr>
                            <th scope="col">Name</th>
                            <th>Wert</th>
                            <th>Beschreibung</th>
                        </tr>
                    </thead>
                    <tr ng-repeat="param in standardParameters">
                        <td scope="row">{{param.name}}</td>
                        <td><input class="parameter" id="{{param.ident}}" type="number" value="{{param.value}}"></td>
                        <td>{{param.description}}</td>
                    </tr>
                </table>

                <h2>3. Wahl des Datensatzes</h2>
                <select ng-model="selectedDatasetId" id="dropwdownDatasetSelection">
                    <option ng-repeat="dataset in datasets" value="{{dataset._id}}">{{dataset.description}}</option>
                </select>
                <a href="/viewdataset#?id={{selectedDatasetId}}" target="_blank" ng-show="selectedDatasetId != ''">View dataset</a>

                <h2>4. Zus. Konfiguration (TODO)</h2>

                <h2>5. Start des Algorithmus</h2>
                <p ng-show="selectedDatasetId == ''">Es müssen alle vorherigen Schritte durchgeführt worden sein, bevor der
                ITS gestartet werden kann.</p>
                <a type="button" id="btnTabuSearch" value="Start" ng-show="selectedDatasetId != ''" class="btn btn-lg btn-primary"
                   onclick="postTabuSearch()">Start</a>
            </div>
        </div>
    </body>
</html>